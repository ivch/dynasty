version: '2.1'

services:
  traefik:
    image: traefik:v2.1
    container_name: "traefik"
    ports:
      - 80:80
      - 443:443
      - 9999:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./_traefik/traefik.yml:/etc/traefik/traefik.yml"
      - "./_traefik/services:/etc/traefik/services"
      - "./letsencrypt:/letsencrypt/"


  backend:
    container_name: backend
    image: ivch/dynasty:latest
    environment:
      - LOG_LEVEL=debug
      - HTTP_PORT=9001
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_HOST=dyndb
      - DB_PORT=5432
      - DB_SCHEMA=postgres
      - DB_SSL=disable
      - AUTH_JWT_SECRET=!covabunga!
      - USER_VERIFY_REG_CODE=false
      - UI_GUARD_API_HOST=https://localhost/requests
      - UI_GUARD_PAGE_URI=/ui/guard
      - UI_GUARD_PAGER_LIMIT=10
      - S3_REGION=
      - S3_KEY=
      - S3_SECRET=
      - S3_ENDPOINT=
      - S3_SPACE_NAME=
      - CDN_HOST=
      - SMTP_FROM=
      - SMTP_PASS=
      - SMTP_HOST=
      - SMTP_PORT=
    expose:
      - 9001
    ports:
      - 9001:9001
    depends_on:
      dyndb:
        condition: service_healthy

  dyndb:
    image: postgres:10.2
    command: postgres -c log_statement=all
    volumes:
      - "./schema.sql:/docker-entrypoint-initdb.d/1-schema.sql"
      - "./.data/db:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
      PGDATA: "/var/lib/postgresql/data"
    expose:
      - 5432
    ports:
      - 54322:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5